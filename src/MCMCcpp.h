/* C++ implementation of BASiCS 
 * Author: Catalina A. Vallejos (cnvallej@uc.cl) & Nils Eling
 */

#ifndef MCMCCPP_H
#define MCMCCPP_H

#include <math.h>
#include <assert.h>
#include <R.h>
#include <Rmath.h>
#include <cmath>
//File: matprod_arma.cpp
//[[Rcpp::depends(RcppArmadillo)]]
#include <RcppArmadillo.h>

using namespace Rcpp;

// Main MCMC sampler
Rcpp::List HiddenBASiCS_MCMCcpp(
    int N, 
    int Thin, 
    int Burn,  
    arma::mat Counts,  
    arma::mat BatchDesign, 
    arma::vec muSpikes, 
    arma::vec mu0, 
    arma::vec delta0, 
    arma::vec phi0, 
    arma::vec s0,
    arma::vec nu0, 
    arma::vec theta0,
    double mu_mu,
    double s2mu,
    double adelta, 
    double bdelta, 
    double s2delta,
    double prior_delta,
    arma::vec aphi, 
    double as, 
    double bs,   
    double atheta, 
    double btheta, 
    double ar, 
    arma::vec LSmu0, 
    arma::vec LSdelta0, 
    double LSphi0, 
    arma::vec LSnu0, 
    arma::vec LStheta0, 
    arma::vec sumByCellBio, 
    arma::vec sumByGeneAll, 
    arma::vec sumByGeneBio,
    int StoreAdapt, 
    int EndAdapt,
    int PrintProgress,
    double const& mintol_mu,
    double const& mintol_delta,
    double const& mintol_nu,
    double const& mintol_theta,
    double const& geneExponent,
    double const& cellExponent);

// MCMC sampler for regression case
Rcpp::List HiddenBASiCS_MCMCcppReg(
    int N, 
    int Thin, 
    int Burn,  
    arma::mat Counts,  
    arma::mat BatchDesign, 
    arma::vec muSpikes, 
    arma::vec mu0, 
    arma::vec delta0, 
    arma::vec phi0, 
    arma::vec s0,
    arma::vec nu0, 
    arma::vec theta0,
    double mu_mu,
    double s2mu,
    arma::vec aphi, 
    double as, 
    double bs,   
    double atheta, 
    double btheta, 
    int k,
    arma::vec m0, 
    arma::mat V0, 
    double sigma2_a0, 
    double sigma2_b0,
    arma::vec beta0, 
    double sigma20, 
    double eta0, 
    arma::vec lambda0, 
    double const& variance,
    double ar, 
    arma::vec LSmu0, 
    arma::vec LSdelta0, 
    double LSphi0, 
    arma::vec LSnu0, 
    arma::vec LStheta0, 
    arma::vec sumByCellBio,
    arma::vec sumByGeneAll, 
    arma::vec sumByGeneBio,
    int StoreAdapt, 
    int EndAdapt,
    int PrintProgress,
    bool RBFNTile,
    bool FixLocations,
    arma::vec locations,
    double const& mintol_mu,
    double const& mintol_delta,
    double const& mintol_nu,
    double const& mintol_theta,
    double const& geneExponent,
    double const& cellExponent);


// MCMC sampler for the non-spike case
Rcpp::List HiddenBASiCS_MCMCcppNoSpikes(
    int N, 
    int Thin, 
    int Burn,  
    arma::mat Counts, 
    arma::mat BatchDesign, 
    arma::vec mu0, 
    arma::vec delta0,   
    arma::vec s0, 
    arma::vec nu0,    
    arma::vec theta0,
    double mu_mu,
    double s2mu, 
    double adelta, 
    double bdelta, 
    double s2delta,
    double prior_delta,
    double as,
    double bs,
    double atheta, 
    double btheta, 
    double Constrain,
    arma::vec Index,
    int RefGene,
    arma::vec RefGenes,
    arma::vec ConstrainGene,
    arma::vec NotConstrainGene,
    int ConstrainType,
    int StochasticRef,
    double ar, 
    arma::vec LSmu0, 
    arma::vec LSdelta0, 
    arma::vec LSnu0, 
    arma::vec LStheta0, 
    arma::vec sumByCellAll, 
    arma::vec sumByGeneAll, 
    int StoreAdapt, 
    int EndAdapt,
    int PrintProgress,
    double const& mintol_mu,
    double const& mintol_delta,
    double const& mintol_nu,
    double const& mintol_theta,
    double const& geneExponent,
    double const& cellExponent);

// MCMC sampler for regression and non-spikes case
Rcpp::List HiddenBASiCS_MCMCcppRegNoSpikes(
    int N, 
    int Thin, 
    int Burn,  
    arma::mat Counts,  
    arma::mat BatchDesign, 
    arma::vec mu0, 
    arma::vec delta0, 
    arma::vec s0, 
    arma::vec nu0, 
    arma::vec theta0,
    double mu_mu,
    double s2mu,
    double as,
    double bs,
    double atheta, 
    double btheta, 
    int k,
    arma::vec m0, 
    arma::mat V0, 
    double sigma2_a0, 
    double sigma2_b0,
    arma::vec beta0, 
    double sigma20, 
    double eta0, 
    arma::vec lambda0, 
    double const& variance,
    double Constrain,
    arma::vec Index,
    int RefGene,
    arma::vec RefGenes,
    arma::vec ConstrainGene,
    arma::vec NotConstrainGene,
    int ConstrainType,
    int StochasticRef,
    arma::vec LSmu0, 
    arma::vec LSdelta0, 
    arma::vec LSnu0, 
    arma::vec LStheta0, 
    arma::vec sumByCellAll, 
    arma::vec sumByGeneAll, 
    int StoreAdapt, 
    int EndAdapt,
    int PrintProgress,
    bool RBFNTile,
    bool FixLocations,
    arma::vec locations,
    double const& mintol_mu,
    double const& mintol_delta,
    double const& mintol_nu,
    double const& mintol_theta,
    double const& geneExponent,
    double const& cellExponent);

// Function to cumpute denoised rates
arma::mat HiddenBASiCS_DenoisedRates(
    NumericMatrix CountsBio, 
    NumericMatrix Mu,
    NumericMatrix TransInvDelta,
    NumericMatrix PhiNu, 
    int N,
    int q0,
    int n);

#endif
