% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BASiCS_TestDE.R
\name{BASiCS_TestDE}
\alias{BASiCS_TestDE}
\title{Detection of genes with changes in expression}
\usage{
BASiCS_TestDE(ChainRef, ChainTest, EpsilonM = 0.4 * log(2), EpsilonD = 0.4 *
  log(2), EviThresholdM = NULL, EviThresholdD = NULL,
  OrderVariable = "ProbDiffExp", GroupLabelRef = "Ref",
  GroupLabelTest = "Test", Plot = FALSE, OffSet = TRUE, EFDR_M = 0.05,
  EFDR_D = 0.05, GenesSelect = NULL, ...)
}
\arguments{
\item{ChainRef}{an object of class \code{\link[BASiCS]{BASiCS_Chain-class}} containing parameter estimates for the Reference cell population}

\item{ChainTest}{an object of class \code{\link[BASiCS]{BASiCS_Chain-class}} containing parameter estimates for the Test cell population}

\item{EpsilonM}{Minimum fold change tolerance threshold for detecting changes in overall expression (must be a positive real number)}

\item{EpsilonD}{Minimum fold change tolerance threshold for detecting changes in cell-to-cell biological over dispersion (must be a positive real number)}

\item{EviThresholdM}{Optional parameter. Evidence threshold for detecting changes in overall expression (must be a positive value, between 0 and 1)}

\item{EviThresholdD}{Optional parameter. Evidence threshold for detecting changes in cell-to-cell biological over dispersion (must be a positive value, between 0 and 1)}

\item{OrderVariable}{Ordering variable for output. Must take values in \code{c("GeneIndex", "GeneNames", "ProbDiffExp", "ProbDiffOverDisp")}.}

\item{GroupLabelRef}{Label assigned to reference group. Default: \code{GroupLabelRef = "Ref"}}

\item{GroupLabelTest}{Label assigned to reference group. Default: \code{GroupLabelRef = "Test"}}

\item{Plot}{If \code{Plot = TRUE}, error rates control rates and volcano plots are generated.}

\item{OffSet}{Optional argument to remove a fix offset effect (if not previously removed from the MCMC chains). This argument will be removed shorly, once offset removal is built as an internal step.}

\item{EFDR_M}{Target for expected false discovery rate related to the comparison of means (default = 0.05)}

\item{EFDR_D}{Target for expected false discovery rate related to the comparison of dispersions (default = 0.05)}

\item{GenesSelect}{Optional argument to provide a user-defined list of genes to be considered for the comparison (default = NULL). When used, this argument must be a vector of 'TRUE' (include gene) / 'FALSE' (exclude gene) indicator, with the same length as the number of intrinsic genes and following the same order as how genes are displayed in the table of counts.  This argument is necessary in order to have a meaningful EFDR calibration when the user decides to exclude some genes from the comparison.}

\item{...}{Graphical parameters (see \code{\link[graphics]{par}}).}
}
\value{
\code{BASiCS_TestDE} returns a list of 4 elements:
\describe{
\item{\code{Table}}{A \code{\link[base]{data.frame}} containing the results of the differential expression test}
   \describe{
   \item{\code{GeneNames}}{Gene name of each biological gene}
   \item{\code{ExpOverall}}{For each biological gene, the mean expression parameter \eqn{\mu[i]} is averaged across the test and refernce cell population.}
   \item{\code{ExpTest}}{Mean expression parameter \eqn{\mu[i]} for each biological gene in the test cell population.}
   \item{\code{ExpRef}}{Mean expression parameter \eqn{\mu[i]} for each biological gene in the reference cell population.}
   \item{\code{ExpFC}}{Fold change in mean expression parameters between the test and reference cell population.}
   \item{\code{ExpLogFC}}{Log-transformed fold change in mean expression parameters.}
   \item{\code{ProbDiffExp}}{Posterior probability for detection mean expression difference between the test and reference cell population given the supplied parameters.}
   \item{\code{ResultDiffExp}}{Indicator if a gene is higher expressed in the test or refernce population.}
   \item{\code{OverDispOverall}}{For each biological gene, the over-dispersion hyper-parameter \eqn{\delta[i]} is averaged across the test and refernce cell population.}
   \item{\code{OverDispTest}}{Over-dispersion hyper-parameter \eqn{\delta[i]} for each biological gene in the test cell population.}
   \item{\code{OverDispRef}}{Over-dispersion hyper-parameter \eqn{\delta[i]} for each biological gene in the reference cell population.}
   \item{\code{OverDispFC}}{Fold change in over-dispersion hyper-parameters between the test and reference cell population.}
   \item{\code{OverDispLogFC}}{Log-transformed fold change in over-dispersion hyper-parameters.}
   \item{\code{ProbDiffOverDisp}}{Posterior probability for detection over-dispersion difference between the test and reference cell population given the supplied parameters.}
   \item{\code{ResultDiffOverDisp}}{Indicator if a gene has a higher over-dispersion in the test or refernce population.}
   }
 \item{\code{DiffExpSummary}}{A list containing the following information for the differential mean expression test:}
   \describe{
  \item{\code{EviThreshold}}{Evidence thresholds.}
  \item{\code{EFDR}}{Expected false discovery rate for the given thresholds.}
  \item{\code{EFNR}}{Expected false negative rate for the given thresholds.}
  }
 \item{\code{DiffOverDispSummary}}{A list containing the following information for the differential over-dispersion test:}
   \describe{
  \item{\code{EviThreshold}}{Evidence thresholds.}
  \item{\code{EFDR}}{Expected false discovery rate for the given thresholds.}
  \item{\code{EFNR}}{Expected false negative rate for the given thresholds.}
  }
}
}
\description{
Function to assess changes in expression (mean and over-dispersion)
}
\examples{

# Loadind two synthetic datasets
Data1 <- makeExampleBASiCS_Data(Example = 1)
Data2 <- makeExampleBASiCS_Data(Example = 2)

# Running the MCMC (separately for each group of cells) 
Chain1 <- BASiCS_MCMC(Data = Data1, N = 20000, Thin = 20, Burn = 10000, 
                      PrintProgress = FALSE)
Chain2 <- BASiCS_MCMC(Data = Data2, N = 20000, Thin = 20, Burn = 10000, 
                      PrintProgress = FALSE)
                      
Test <- BASiCS_TestDE(ChainRef = Chain1, ChainTest = Chain2,
                      EpsilonM = 0.4*log(2), EpsilonD = 0.4*log(2), OffSet = TRUE)

}
