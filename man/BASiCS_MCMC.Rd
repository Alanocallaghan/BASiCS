% Generated by roxygen2 (4.0.2): do not edit by hand
\name{BASiCS_MCMC}
\alias{BASiCS_MCMC}
\title{BASiCS MCMC sampler}
\usage{
BASiCS_MCMC(Data, N, Thin, Burn, ...)
}
\arguments{
\item{Data}{A \code{\link[BASiCS]{BASiCS_Data-class}} object.}

\item{N}{Total number of iterations for the MCMC sampler. Use \code{N>=max(4,Thin)}, \code{N} being a multiple of \code{Thin}.}

\item{Thin}{Thining period for the MCMC sampler. Use \code{Thin>=2}.}

\item{Burn}{Burn-in period for the MCMC sampler. Use \code{Burn>=1}, \code{Burn<N}, \code{Burn} being a multiple of \code{Thin}.}

\item{...}{Optional parameters.
\describe{
\item{\code{PriorParam}}{List of 7 elements, containing the hyper-parameter values required for the adopted prior (see Vallejos et al, 2015). All elements must be positive real numbers.
\describe{
  \item{\code{a.delta}}{Shape hyper-parameter for the Gamma(\code{a.delta},\code{b.delta}) prior that is shared by all gene-specific biological cell-to-cell heterogeneity hyper-parameters \eqn{\delta[i]}.
  Default: \code{a.delta = 1}.}
  \item{\code{b.delta}}{Rate hyper-parameter for the Gamma(\code{a.delta},\code{b.delta}) prior that is shared by all gene-specific biological cell-to-cell heterogeneity hyper-parameters \eqn{\delta[i]}.
  Default: \code{b.delta = 1}.}
  \item{\code{s2.kappa}}{Variance hyper-parameter for the Normal(0,\code{s2.kappa}) prior that is shared by all cell-specific mRNA content normalising constants \eqn{\kappa[j]} (logit scale).
  Default: \code{s2.kappa = 1}.}
  \item{\code{a.s}}{Shape hyper-parameter for the Gamma(\code{a.s},\code{b.s}) prior that is shared by all cell-specific capture efficiency normalising constants \eqn{s[j]}.
  Default: \code{a.s = 1}.}
  \item{\code{b.s}}{Rate hyper-parameter for the Gamma(\code{a.s},\code{b.s}) prior that is shared by all cell-specific capture efficiency normalising constants \eqn{s[j]}.
  Default: \code{b.s = 1}.}
  \item{\code{a.theta}}{Shape hyper-parameter for the Gamma(\code{a.theta},\code{b.theta}) prior for technical noise hyper-parameter \eqn{\theta}.
  Default: \code{a.theta = 1}.}
  \item{\code{b.theta}}{Rate hyper-parameter for the Gamma(\code{a.theta},\code{b.theta}) prior for technical noise hyper-parameter \eqn{\theta}.
  Default: \code{b.theta = 1}.}
}}
\item{\code{AR}}{Optimal acceptance rate for adaptive Metropolis Hastings updates. It must be a positive number between 0 and 1. Default (and recommended): \code{ar = 0.44}}.

\item{\code{StopAdapt}}{Iteration at which adaptive proposals are not longer adapted. Use \code{stopAdapt>=1}. Default: \code{StopAdapt = Burn}.}

\item{\code{StoreChains}}{If \code{StoreChains = T}, MCMC chains of each parameter are stored in separate .txt files. (\code{RunName} argument used for file names). Default: \code{StoreChains = F}.}
\item{\code{StoreAdapt}}{If \code{StoreAdapt = T}, trajectory of adaptive proposal variances (log scale) for each parameter are stored in separate .txt files. (\code{RunName} argument used for file names). Default: \code{StoreAdapt = F}.}
\item{\code{StoreDir}}{Directory where MCMC chain will be stored (only required if \code{Store = T}). Default: \code{StoreDir = getwd()}.}
\item{\code{RunName}}{Run-name to be used when storing chains and/or adaptive proposal variances in .txt files.}
\item{\code{PrintProgress}}{If \code{PrintProgress = T}, intermediate output is displayed in the console. }
}}
}
\value{
An object of class \code{\link[BASiCS]{BASiCS_Chain-class}}.
}
\description{
MCMC sampler to perform Bayesian inference for single-cell mRNA sequencing datasets using the model described in Vallejos et al (2015).
}
\examples{
# Built-in simulated dataset
Data = makeExampleBASiCS_Data()

# Only a short run of the MCMC algorithm for illustration purposes
# Longer runs required to reach convergence
MCMC_Output <- BASiCS_MCMC(Data, N = 40000, Thin = 20, Burn = 20000, PrintProgress = FALSE)
head(displayChainMu(MCMC_Output))
head(displayChainDelta(MCMC_Output))
head(displayChainPhi(MCMC_Output))
head(displayChainS(MCMC_Output))
head(displayChainNu(MCMC_Output))
head(displayChainTheta(MCMC_Output))

# Traceplots
plot(MCMC_Output, Param = "mu", Gene = 1)
plot(MCMC_Output, Param = "delta", Gene = 1)
plot(MCMC_Output, Param = "phi", Cell = 1)
plot(MCMC_Output, Param = "s", Cell = 1)
plot(MCMC_Output, Param = "nu", Cell = 1)
plot(MCMC_Output, Param = "theta")

# Calculating posterior medians and 95\% HPD intervals
MCMC_Summary <- Summary(MCMC_Output)
head(displaySummaryMu(MCMC_Summary))
head(displaySummaryDelta(MCMC_Summary))
head(displaySummaryPhi(MCMC_Summary))
head(displaySummaryS(MCMC_Summary))
head(displaySummaryNu(MCMC_Summary))
head(displaySummaryTheta(MCMC_Summary))

# Graphical display of posterior medians and 95\% HPD intervals
plot(MCMC_Summary, Param = "mu", main = "All genes")
plot(MCMC_Summary, Param = "mu", Genes = 1:10, main = "First 10 genes")
plot(MCMC_Summary, Param = "delta", main = "All genes")
plot(MCMC_Summary, Param = "delta", Genes = c(2,5,10,50,100), main = "5 customized genes")
plot(MCMC_Summary, Param = "phi", main = "All cells")
plot(MCMC_Summary, Param = "phi", Cells = 1:5, main = "First 5 cells")
plot(MCMC_Summary, Param = "s", main = "All cells")
plot(MCMC_Summary, Param = "s", Cells = 1:5, main = "First 5 cells")
plot(MCMC_Summary, Param = "nu", main = "All cells")
plot(MCMC_Summary, Param = "nu", Cells = 1:5, main = "First 5 cells")
plot(MCMC_Summary, Param = "theta")

# To constrast posterior medians of cell-specific parameters
plot(MCMC_Summary, Param = "phi", Param2 = "s")
plot(MCMC_Summary, Param = "phi", Param2 = "nu")
plot(MCMC_Summary, Param = "s", Param2 = "nu")

# To constrast posterior medians of gene-specific parameters
plot(MCMC_Summary, Param = "mu", Param2 = "delta", log = "x")

# Highly and lowly variable genes detection
DetectHVG <- BASiCS_DetectHVG(MCMC_Output, VarThreshold = 0.70, Plot = TRUE)
table(DetectHVG$HVG)
DetectLVG <- BASiCS_DetectLVG(MCMC_Output, VarThreshold = 0.40, Plot = TRUE)
table(DetectLVG$LVG)

plot(MCMC_Summary, Param = "mu", Param2 = "delta", log = "x", col = 8)
points(DetectHVG$Mu[DetectHVG$HVG], DetectHVG$Delta[DetectHVG$HVG],
       pch = 16, col = "red", cex = 1.5)
points(DetectLVG$Mu[DetectLVG$LVG], DetectLVG$Delta[DetectLVG$LVG],
       pch = 16, col = "blue", cex = 1.5)

# If variance thresholds are not fixed
BASiCS_VarThresholdSearchHVG(MCMC_Output, VarThresholdsGrid = seq(0.70,0.75,by=0.01))
BASiCS_VarThresholdSearchLVG(MCMC_Output, VarThresholdsGrid = seq(0.40,0.45,by=0.01))
}
\author{
Catalina A. Vallejos \email{catalina.vallejos@mrc-bsu.cam.ac.uk}
}
\references{
Vallejos, Marioni and Richardson (2015). Bayesian Analysis of Single-Cell Sequencing data.
}

