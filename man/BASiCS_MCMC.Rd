% Generated by roxygen2: do not edit by hand
<<<<<<< HEAD
% Please edit documentation in R/FunctionsPart1.R
=======
% Please edit documentation in R/BASiCS_MCMC.R
>>>>>>> BioC
\name{BASiCS_MCMC}
\alias{BASiCS_MCMC}
\title{BASiCS MCMC sampler}
\usage{
BASiCS_MCMC(Data, N, Thin, Burn, ...)
}
\arguments{
<<<<<<< HEAD
\item{Data}{A \code{\link[BASiCS]{BASiCS_Data-class}} object.}

\item{N}{Total number of iterations for the MCMC sampler. Use \code{N>=max(4,Thin)}, \code{N} being a multiple of \code{Thin}.}

\item{Thin}{Thining period for the MCMC sampler. Use \code{Thin>=2}.}

\item{Burn}{Burn-in period for the MCMC sampler. Use \code{Burn>=1}, \code{Burn<N}, \code{Burn} being a multiple of \code{Thin}.}

\item{...}{Optional parameters.
\describe{
\item{\code{PriorParam}}{List of 7 elements, containing the hyper-parameter values required for the adopted prior (see Vallejos et al, 2015). All elements must be positive real numbers.
\describe{
  \item{\code{s2.mu}}{Scale hyper-parameter for the log-Normal(\code{0},\code{s2.mu}) prior that is shared by all gene-specific expression rate parameters \eqn{\mu[i]}.
  Default: \code{s2.mu = 0.5}.}
  \item{\code{a.delta}}{Only used when `PriorDelta == 'gamma'`. Shape hyper-parameter for the Gamma(\code{a.delta},\code{b.delta}) prior that is shared by all gene-specific biological cell-to-cell heterogeneity hyper-parameters \eqn{\delta[i]}.
  Default: \code{a.delta = 1}.}
  \item{\code{b.delta}}{Only used when `PriorDelta == 'gamma'`. Rate hyper-parameter for the Gamma(\code{a.delta},\code{b.delta}) prior that is shared by all gene-specific biological cell-to-cell heterogeneity hyper-parameters \eqn{\delta[i]}.
  Default: \code{b.delta = 1}.}
  \item{\code{p.phi}}{Dirichlet hyper-parameter for the joint of all (scaled by \code{n}) cell-specific mRNA content normalising constants \eqn{\phi[j] / n}.
  Default: \code{p.phi = rep(1, n)}.}
  \item{\code{a.s}}{Shape hyper-parameter for the Gamma(\code{a.s},\code{b.s}) prior that is shared by all cell-specific capture efficiency normalising constants \eqn{s[j]}.
  Default: \code{a.s = 1}.}
  \item{\code{b.s}}{Rate hyper-parameter for the Gamma(\code{a.s},\code{b.s}) prior that is shared by all cell-specific capture efficiency normalising constants \eqn{s[j]}.
  Default: \code{b.s = 1}.}
  \item{\code{a.theta}}{Shape hyper-parameter for the Gamma(\code{a.theta},\code{b.theta}) prior for technical noise hyper-parameter \eqn{\theta}.
  Default: \code{a.theta = 1}.}
  \item{\code{b.theta}}{Rate hyper-parameter for the Gamma(\code{a.theta},\code{b.theta}) prior for technical noise hyper-parameter \eqn{\theta}.
  Default: \code{b.theta = 1}.}
  \item{\code{s2.delta}}{Only used when `PriorDelta == 'log-normal'`. Scale hyper-parameter for the log-Normal(\code{0},\code{s2.delta}) prior that is shared by all gene-specific expression rate parameters \eqn{\delta[i]}.
  Default: \code{s2.delta = 0.5}. }
}}
\item{\code{AR}}{Optimal acceptance rate for adaptive Metropolis Hastings updates. It must be a positive number between 0 and 1. Default (and recommended): \code{ar = 0.44}}.

\item{\code{StopAdapt}}{Iteration at which adaptive proposals are not longer adapted. Use \code{StopAdapt>=1}. Default: \code{StopAdapt = Burn}.}

\item{\code{StoreChains}}{If \code{StoreChains = T}, the slots of the generated \code{BASiCS_Chain} object are stored in separate .txt files. Each row of the output file containing an interation (\code{RunName} argument used to index file names). Default: \code{StoreChains = F}.}
\item{\code{StoreAdapt}}{If \code{StoreAdapt = T}, trajectory of adaptive proposal variances (in log-scale) for each parameter are stored in separate .txt files. Each row of the output file containing an interation (\code{RunName} argument used to index file names). Default: \code{StoreAdapt = F}.}
\item{\code{StoreDir}}{Directory where output files are stored. Only required if \code{StoreChains = TRUE} and/or \code{StoreAdapt = TRUE}). Default: \code{StoreDir = getwd()}.}
\item{\code{RunName}}{String used to index `.txt` files storing chains and/or adaptive proposal variances.}
\item{\code{PrintProgress}}{If \code{PrintProgress = FALSE}, console-based progress report is suppressed.}
\item{\code{ls.phi0}}{Starting value for the adaptive concentration parameter of the Metropolis proposals for \code{phi}.}
\item{\code{PriorDelta}}{Specifies the prior used for \code{delta}. Possible values are 'gamma' (Gamma(\code{a.theta},\code{b.theta}) prior) and 'log-normal' (log-Normal(\code{0},\code{s2.delta}) prior) .}
\item{\code{Start}}{In general, we do not advise to specify this argument. Default options have been tuned to facilitate convergence. It can be used to set user defined starting points for the MCMC algorithm. If used, it must be a list containing the following elements: \code{mu0},
\code{delta0}, \code{phi0}, \code{s0}, \code{nu0}, \code{theta0}, \code{ls.mu0}, \code{ls.delta0}, \code{ls.phi0}, \code{ls.nu0}, \code{ls.theta0}}
}}
}
\value{
An object of class \code{\link[BASiCS]{BASiCS_Chain-class}}.
}
\description{
MCMC sampler to perform Bayesian inference for single-cell mRNA sequencing datasets using the model described in Vallejos et al (2015).
=======
\item{Data}{A \code{\link[SingleCellExperiment]{SingleCellExperiment}} object. 
This MUST be formatted to include the spike-ins information (see vignette).}

\item{N}{Total number of iterations for the MCMC sampler. Use \code{N>=max(4,Thin)}, 
\code{N} being a multiple of \code{Thin}.}

\item{Thin}{Thining period for the MCMC sampler. Use \code{Thin>=2}.}

\item{Burn}{Burn-in period for the MCMC sampler. Use \code{Burn>=1}, 
\code{Burn<N}, \code{Burn} being a multiple of \code{Thin}.}

\item{...}{Optional parameters.
\describe{
\item{\code{PriorDelta}}{Specifies the prior used for \code{delta}. 
Possible values are 'gamma' (Gamma(\code{a.theta},\code{b.theta}) prior) and 
'log-normal' (log-Normal(\code{0},\code{s2.delta}) prior) .}. 
Default value: \code{PriorDelta = 'log-normal'}. 
\item{\code{PriorParam}}{List of 7 elements, containing the hyper-parameter 
values required for the adopted prior (see Vallejos et al, 2015, 2016). 
All elements must be positive real numbers.
\describe{
  \item{\code{s2.mu}}{Scale hyper-parameter for the log-Normal(\code{0},\code{s2.mu}) 
  prior that is shared by all gene-specific expression rate parameters \eqn{\mu_i}.
  Default: \code{s2.mu = 0.5}.}
  \item{\code{s2.delta}}{Only used when `PriorDelta == 'log-normal'`. 
  Scale hyper-parameter for the log-Normal(\code{0},\code{s2.delta}) prior 
  that is shared by all gene-specific over-dispersion parameters \eqn{\delta_i}.
  Default: \code{s2.delta = 0.5}. }
  \item{\code{a.delta}}{Only used when `PriorDelta == 'gamma'`. 
  Shape hyper-parameter for the Gamma(\code{a.delta},\code{b.delta}) prior 
  that is shared by all gene-specific biological over-dispersion parameters \eqn{\delta_i}.
  Default: \code{a.delta = 1}.}
  \item{\code{b.delta}}{Only used when `PriorDelta == 'gamma'`. 
  Rate hyper-parameter for the Gamma(\code{a.delta},\code{b.delta}) prior 
  that is shared by all gene-specific biological over-dispersion hyper-parameters \eqn{\delta_i}.
  Default: \code{b.delta = 1}.}
  \item{\code{p.phi}}{Dirichlet hyper-parameter for the joint of all (scaled by \code{n}) 
  cell-specific mRNA content normalising constants \eqn{\phi_j / n}.
  Default: \code{p.phi} \code{= rep(1, n)}.}
  \item{\code{a.s}}{Shape hyper-parameter for the Gamma(\code{a.s},\code{b.s}) 
  prior that is shared by all cell-specific capture efficiency normalising constants \eqn{s_j}.
  Default: \code{a.s = 1}.}
  \item{\code{b.s}}{Rate hyper-parameter for the Gamma(\code{a.s},\code{b.s}) 
  prior that is shared by all cell-specific capture efficiency normalising constants \eqn{s_j}.
  Default: \code{b.s = 1}.}
  \item{\code{a.theta}}{Shape hyper-parameter for the Gamma(\code{a.theta},\code{b.theta}) 
  prior for technical noise hyper-parameter \eqn{\theta}.
  Default: \code{a.theta = 1}.}
  \item{\code{b.theta}}{Rate hyper-parameter for the Gamma(\code{a.theta},\code{b.theta}) 
  prior for technical noise hyper-parameter \eqn{\theta}.
  Default: \code{b.theta = 1}.}

}}
\item{\code{AR}}{Optimal acceptance rate for adaptive Metropolis Hastings updates. 
It must be a positive number between 0 and 1. Default (and recommended): \code{AR = 0.44}}.

\item{\code{StopAdapt}}{Iteration at which adaptive proposals are not longer adapted. 
Use \code{StopAdapt>=1}. Default: \code{StopAdapt = Burn}.}

\item{\code{StoreChains}}{If \code{StoreChains = TRUE}, the generated \code{BASiCS_Chain} 
object is stored as a `.Rds` file (\code{RunName} argument used to index the file name). 
Default: \code{StoreChains = FALSE}.}
\item{\code{StoreAdapt}}{If \code{StoreAdapt = TRUE}, trajectory of adaptive proposal 
variances (in log-scale) for all parameters is stored as a list in a `.Rds` file 
(\code{RunName} argument used to index file name). Default: \code{StoreAdapt = FALSE}.}
\item{\code{StoreDir}}{Directory where output files are stored. Only required if 
\code{StoreChains = TRUE} and/or \code{StoreAdapt = TRUE}). 
Default: \code{StoreDir = getwd()}.}
\item{\code{RunName}}{String used to index `.Rds` files storing chains 
and/or adaptive proposal variances.}
\item{\code{PrintProgress}}{If \code{PrintProgress = FALSE}, console-based 
progress report is suppressed.}
\item{\code{ls.phi0}}{Starting value for the adaptive concentration parameter 
of the Metropolis proposals for \eqn{\phi = (\phi_1, \ldots, \phi_n)'}.}
\item{\code{Start}}{Starting values for the MCMC sampler. We do not advise to 
specify this argument. Default options have been tuned to facilitate convergence. 
If changed, it must be a list containing the following elements: \code{mu0},
\code{delta0}, \code{phi0}, \code{s0}, \code{nu0}, \code{theta0}, \code{ls.mu0}, 
\code{ls.delta0}, \code{ls.phi0}, \code{ls.nu0} and \code{ls.theta0}}
}}
}
\value{
An object of class \code{\link[BASiCS]{BASiCS_Chain}}.
}
\description{
MCMC sampler to perform Bayesian inference for single-cell 
mRNA sequencing datasets using the model described in Vallejos et al (2015).
>>>>>>> BioC
}
\examples{

# Built-in simulated dataset
Data = makeExampleBASiCS_Data()
<<<<<<< HEAD

# Only a short run of the MCMC algorithm for illustration purposes
# Longer runs migth be required to reach convergence
MCMC_Output <- BASiCS_MCMC(Data, N = 10000, Thin = 10, Burn = 5000, PrintProgress = FALSE)
head(displayChainBASiCS(MCMC_Output, Param = "mu"))
head(displayChainBASiCS(MCMC_Output, Param = "delta"))
head(displayChainBASiCS(MCMC_Output, Param = "phi"))
head(displayChainBASiCS(MCMC_Output, Param = "s"))
head(displayChainBASiCS(MCMC_Output, Param = "nu"))
head(displayChainBASiCS(MCMC_Output, Param = "theta"))

# Traceplots
plot(MCMC_Output, Param = "mu", Gene = 1)
plot(MCMC_Output, Param = "delta", Gene = 1)
plot(MCMC_Output, Param = "phi", Cell = 1)
plot(MCMC_Output, Param = "s", Cell = 1)
plot(MCMC_Output, Param = "nu", Cell = 1)
plot(MCMC_Output, Param = "theta", Batch = 1)

# Calculating posterior medians and 95\% HPD intervals
MCMC_Summary <- Summary(MCMC_Output)
head(displaySummaryBASiCS(MCMC_Summary, Param = "mu"))
head(displaySummaryBASiCS(MCMC_Summary, Param = "delta"))
head(displaySummaryBASiCS(MCMC_Summary, Param = "phi"))
head(displaySummaryBASiCS(MCMC_Summary, Param = "s"))
head(displaySummaryBASiCS(MCMC_Summary, Param = "nu"))
head(displaySummaryBASiCS(MCMC_Summary, Param = "theta"))

# Graphical display of posterior medians and 95\% HPD intervals
plot(MCMC_Summary, Param = "mu", main = "All genes")
plot(MCMC_Summary, Param = "mu", Genes = 1:10, main = "First 10 genes")
plot(MCMC_Summary, Param = "delta", main = "All genes")
plot(MCMC_Summary, Param = "delta", Genes = c(2,5,10,50,100), main = "5 customized genes")
plot(MCMC_Summary, Param = "phi", main = "All cells")
plot(MCMC_Summary, Param = "phi", Cells = 1:5, main = "First 5 cells")
plot(MCMC_Summary, Param = "s", main = "All cells")
plot(MCMC_Summary, Param = "s", Cells = 1:5, main = "First 5 cells")
plot(MCMC_Summary, Param = "nu", main = "All cells")
plot(MCMC_Summary, Param = "nu", Cells = 1:5, main = "First 5 cells")
plot(MCMC_Summary, Param = "theta")

# To constrast posterior medians of cell-specific parameters
plot(MCMC_Summary, Param = "phi", Param2 = "s")
plot(MCMC_Summary, Param = "phi", Param2 = "nu")
plot(MCMC_Summary, Param = "s", Param2 = "nu")

# To constrast posterior medians of gene-specific parameters
plot(MCMC_Summary, Param = "mu", Param2 = "delta", log = "x")

# Highly and lowly variable genes detection
#DetectHVG <- BASiCS_DetectHVG(Data, MCMC_Output, VarThreshold = 0.70, Plot = TRUE)
#DetectLVG <- BASiCS_DetectLVG(Data, MCMC_Output, VarThreshold = 0.40, Plot = TRUE)

#plot(MCMC_Summary, Param = "mu", Param2 = "delta", log = "x", col = 8)
#points(DetectHVG$Table[DetectHVG$Table$HVG==1,2], DetectHVG$Table[DetectHVG$Table$HVG==1,3],
#       pch = 16, col = "red", cex = 1)
#points(DetectLVG$Table[DetectLVG$Table$LVG==1,2], DetectLVG$Table[DetectLVG$Table$LVG==1,3],
#       pch = 16, col = "blue", cex = 1)

# If variance thresholds are not fixed
#BASiCS_VarThresholdSearchHVG(Data, MCMC_Output, VarThresholdsGrid = seq(0.70,0.75,by=0.01))
#BASiCS_VarThresholdSearchLVG(Data, MCMC_Output, VarThresholdsGrid = seq(0.40,0.45,by=0.01))

}
\references{
Vallejos, Marioni and Richardson (2015). Bayesian Analysis of Single-Cell Sequencing data. PloS Computational Biology.

Vallejos, Richardson and Marioni (2016). Beyond comparisons of means: understanding changes in gene expression at the single cell level. Genome Biology.
}
\author{
Catalina A. Vallejos \email{cnvallej@uc.cl}
=======
# To analyse real data, please refer to the instructions in: 
# https://github.com/catavallejos/BASiCS/wiki/2.-Input-preparation

# Only a short run of the MCMC algorithm for illustration purposes
# Longer runs migth be required to reach convergence
Chain <- BASiCS_MCMC(Data, N = 50, Thin = 2, Burn = 10, PrintProgress = FALSE)

# For illustration purposes we load a built-in 'BASiCS_Chain' object 
# (obtained using the 'BASiCS_MCMC' function)
data(ChainSC)

# `displayChainBASiCS` can be used to extract information from this output. For example:
head(displayChainBASiCS(ChainSC, Param = 'mu'))

# Traceplot (examples only)
plot(ChainSC, Param = 'mu', Gene = 1)
plot(ChainSC, Param = 'phi', Cell = 1)
plot(ChainSC, Param = 'theta', Batch = 1)

# Calculating posterior medians and 95\% HPD intervals
ChainSummary <- Summary(ChainSC)

# `displaySummaryBASiCS` can be used to extract information from this output. For example:
head(displaySummaryBASiCS(ChainSummary, Param = 'mu'))

# Graphical display of posterior medians and 95\% HPD intervals (examples only)
plot(ChainSummary, Param = 'mu', main = 'All genes')
plot(ChainSummary, Param = 'mu', Genes = 1:10, main = 'First 10 genes')
plot(ChainSummary, Param = 'phi', main = 'All cells')
plot(ChainSummary, Param = 'phi', Cells = 1:5, main = 'First 5 cells')
plot(ChainSummary, Param = 'theta')

# To constrast posterior medians of cell-specific parameters (example only)
par(mfrow = c(1,2))
plot(ChainSummary, Param = 'phi', Param2 = 's', SmoothPlot = FALSE)
# Recommended for large numbers of cells
plot(ChainSummary, Param = 'phi', Param2 = 's', SmoothPlot = TRUE) 

# To constrast posterior medians of gene-specific parameters
par(mfrow = c(1,2))
plot(ChainSummary, Param = 'mu', Param2 = 'delta', log = 'x', SmoothPlot = FALSE)
# Recommended
plot(ChainSummary, Param = 'mu', Param2 = 'delta', log = 'x', SmoothPlot = TRUE) 

# Highly and lowly variable genes detection (within a single group of cells)
DetectHVG <- BASiCS_DetectHVG(ChainSC, VarThreshold = 0.60, EFDR = 0.10, Plot = TRUE)
DetectLVG <- BASiCS_DetectLVG(ChainSC, VarThreshold = 0.40, EFDR = 0.10, Plot = TRUE)

plot(ChainSummary, Param = 'mu', Param2 = 'delta', log = 'x', col = 8)
with(DetectHVG$Table, points(Mu[HVG == TRUE], Delta[HVG == TRUE],
       pch = 16, col = 'red', cex = 1))
with(DetectLVG$Table, points(Mu[LVG == TRUE], Delta[LVG == TRUE],
       pch = 16, col = 'blue', cex = 1))

# If variance thresholds are not fixed
BASiCS_VarThresholdSearchHVG(ChainSC, VarThresholdsGrid = seq(0.55,0.65,by=0.01), EFDR = 0.10)
BASiCS_VarThresholdSearchLVG(ChainSC, VarThresholdsGrid = seq(0.35,0.45,by=0.01), EFDR = 0.10)

# For examples of differential analyses between 2 populations of cells see:
help(BASiCS_TestDE)

}
\references{
Vallejos, Marioni and Richardson (2015). PLoS Computational Biology. 

Vallejos, Richardson and Marioni (2016). Genome Biology.
}
\author{
Catalina A. Vallejos \email{cnvallej@uc.cl} and Nils Eling
>>>>>>> BioC
}
