% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FunctionsPart1.R
\name{BASiCS_Filter}
\alias{BASiCS_Filter}
\title{Filter for input datasets}
\usage{
BASiCS_Filter(Counts, Tech, SpikeInput, MinTotalCountsPerCell = 2,
  MinTotalCountsPerGene = 2, MinCellsWithExpression = 2,
  MinAvCountsPerCellsWithExpression = 2)
}
\arguments{
\item{Counts}{Matrix of dimensions \code{q} times \code{n} whose elements corresponds to the simulated expression counts. 
First \code{q.bio} rows correspond to biological genes. Last \code{q-q.bio} rows correspond to technical spike-in genes.}

\item{Tech}{Logical vector of length \code{q}. If \code{Tech = F} the gene is biological; otherwise the gene is spike-in.}

\item{SpikeInput}{Vector of length \code{q-q.bio} whose elements indicate the simulated input concentrations for the spike-in genes.}

\item{MinTotalCountsPerCell}{Minimum value of total expression counts required per cell (biological and technical)}

\item{MinTotalCountsPerGene}{Minimum value of total expression counts required per transcript (biological and technical)}

\item{MinCellsWithExpression}{Minimum number of cells where expression must be detected (positive count). Criteria applied to each transcript.}

\item{MinAvCountsPerCellsWithExpression}{Minimum average number of counts per cells where expression is detected. Criteria applied to each transcript.}
}
\value{
A list of 2 elements
\describe{
\item{\code{Counts}}{Filtered matrix of expression counts}
\item{\code{Tech}}{Filtered vector of spike-in indicators}
\item{\code{SpikeInput}}{Filtered vector of spike-in genes input molecules}
\item{\code{IncludeGenes}}{Inclusion indicators for transcripts}
\item{\code{IncludeCells}}{Inclusion indicators for cells}
}
}
\description{
\code{BASiCS_Filter} indicates which transcripts and cells pass a pre-defined inclusion criteria.
}
\examples{

set.seed(1)
Counts = Counts = matrix(rpois(50*10, 2), ncol = 10)
rownames(Counts) <- c(paste0("Gene", 1:40), paste0("Spike", 1:10))
Tech = c(rep(FALSE,40),rep(TRUE,10))
set.seed(2)
SpikeInput = rgamma(10,1,1)
SpikeInfo <- data.frame("SpikeID" = paste0("Spike", 1:10), "SpikeInput" = SpikeInput)

Filter = BASiCS_Filter(Counts, Tech, SpikeInput, 
                       MinTotalCountsPerCell = 2, MinTotalCountsPerGene = 2, 
                       MinCellsWithExpression = 2, MinAvCountsPerCellsWithExpression = 2)
SpikeInfoFilter = SpikeInfo[SpikeInfo$SpikeID \%in\% 
         names(Filter$IncludeGenes)[Filter$IncludeGenes == TRUE],]
FilterData = newBASiCS_Data(Filter$Counts, Filter$Tech, SpikeInfoFilter)

}
\author{
Catalina A. Vallejos \email{catalina.vallejos@mrc-bsu.cam.ac.uk}
}
\references{
Vallejos, Marioni and Richardson (2015). Bayesian Analysis of Single-Cell Sequencing data.
}
\seealso{
\code{\link[BASiCS]{BASiCS_Data-class}}
}

